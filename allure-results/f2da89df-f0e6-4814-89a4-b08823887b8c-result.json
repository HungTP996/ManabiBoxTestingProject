{"name": "test_main_menu_navigation[chromium-カタカナページの遷移とホームアイコンのテスト]", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TargetClosedError: Page.goto: Target page, context or browser has been closed\nCall log:\n  - navigating to \"https://digistudy.sing.jp/auth/student?user_key=$2y$10$EARNU4SwVoZqcBbl3sHzA./PFceK04lyF.vcC1gQQjFmFAhjX1.pS\", waiting until \"domcontentloaded\"", "trace": "page_on_failure = <Page url='https://digistudy.sing.jp/auth/student?user_key=$2y$10$EARNU4SwVoZqcBbl3sHzA./PFceK04lyF.vcC1gQQjFmFAhjX1.pS'>\n\n    @pytest.fixture(scope=\"function\")\n    def logged_in_page(page_on_failure: Page) -> Page:\n        \"\"\"\n        Fixture này thực hiện việc đăng nhập và trả về một trang đã sẵn sàng.\n        Nó đã được cập nhật để chờ cho đến khi các icon menu thực sự hiển thị.\n        \"\"\"\n        page = page_on_failure\n    \n        # --- Các bước đăng nhập ---\n>       page.goto(settings.BASE_URL, wait_until=\"domcontentloaded\")\n\ntests\\conftest.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n.venv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:9019: in goto\n    self._sync(\n.venv\\Lib\\site-packages\\playwright\\_impl\\_page.py:556: in goto\n    return await self._main_frame.goto(**locals_to_params(locals()))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n.venv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:153: in goto\n    await self._channel.send(\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:69: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x00000179E70E42F0>, cb = <function Channel.send.<locals>.<lambda> at 0x00000179E74C8A40>, is_internal = False\ntitle = None\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False, title: str = None\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(\n            task, \"__pw_stack__\", None\n        ) or inspect.stack(0)\n    \n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal, title)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TargetClosedError: Page.goto: Target page, context or browser has been closed\nE           Call log:\nE             - navigating to \"https://digistudy.sing.jp/auth/student?user_key=$2y$10$EARNU4SwVoZqcBbl3sHzA./PFceK04lyF.vcC1gQQjFmFAhjX1.pS\", waiting until \"domcontentloaded\"\n\n.venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:558: TargetClosedError"}, "description": "\nMỗi bộ dữ liệu sẽ được chạy như một test case độc lập.\nFixture 'logged_in_page' sẽ đảm bảo đăng nhập mới cho mỗi case.\n", "parameters": [{"name": "browser_name", "value": "'chromium'"}, {"name": "test_case", "value": "{'description': 'カタカナページの遷移とホームアイコンのテスト', 'click_alt': 'カタカナ', 'expected_value': 'カタカナをおぼえる', 'back_method': 'alt', 'back_selector': 'icon home'}"}], "start": 1756459047379, "stop": 1756459047379, "uuid": "ab84008c-b102-405c-a462-32e76d302f63", "historyId": "d62c485d9b36a73d5d36dcbf0d1155be", "testCaseId": "07f3a09e57b02157bce8a57cf2865071", "fullName": "tests.frontend.test_page#test_main_menu_navigation", "labels": [{"name": "parentSuite", "value": "tests.frontend"}, {"name": "suite", "value": "test_page"}, {"name": "host", "value": "DESKTOP-ID4K0T4"}, {"name": "thread", "value": "24952-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.frontend.test_page"}], "titlePath": ["tests", "frontend", "test_page.py"]}